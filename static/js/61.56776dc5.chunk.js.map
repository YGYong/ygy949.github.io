{"version":3,"file":"static/js/61.56776dc5.chunk.js","mappings":"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","sources":["layout/aside/Logo.tsx","layout/aside/index.tsx","layout/header/components/Avatar.tsx","layout/header/components/FullScreen.tsx","layout/header/components/Skin.tsx","layout/header/index.tsx","layout/footer/index.tsx","layout/index.tsx"],"sourcesContent":["import { useSelector } from \"react-redux\";\r\nimport logo from \"@/assets/images/logo.png\";\r\nexport default function Logo() {\r\n  const headerStore = useSelector((state: any) => {\r\n    return state.headerReducer;\r\n  });\r\n  return (\r\n    <div className=\"logo_menu\">\r\n      <img src={logo} alt=\"\" />\r\n      {headerStore.isCollapsed || <span>Ygyong</span>}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, startTransition } from \"react\";\r\nimport \"./index.less\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport {\r\n  HomeOutlined,\r\n  ProfileOutlined,\r\n  DesktopOutlined,\r\n  PhoneOutlined,\r\n  GlobalOutlined,\r\n} from \"@ant-design/icons\";\r\nimport type { MenuProps } from \"antd\";\r\nimport { Menu } from \"antd\";\r\nimport Logo from \"./Logo\";\r\n\r\ntype MenuItem = Required<MenuProps>[\"items\"][number];\r\n\r\nconst items: MenuItem[] = [\r\n  { key: \"/home\", icon: <HomeOutlined />, label: \"首页\" },\r\n  { key: \"/largeScreen\", icon: <DesktopOutlined />, label: \"大屏\" },\r\n  { key: \"/tool\", icon: <ProfileOutlined />, label: \"功能\" },\r\n  { key: \"/connection\", icon: <PhoneOutlined />, label: \"联系我们\" },\r\n  { key: \"/about\", icon: <GlobalOutlined />, label: \"关于\" },\r\n];\r\nexport default function HeaderIndex() {\r\n  const [selectedKeys, setSelectedKeys] = useState<string[]>([]);\r\n  // 编程式导航\r\n  const navigate = useNavigate();\r\n  // 路由信息\r\n  const { pathname } = useLocation();\r\n  // 页面刷新时menu菜单保持高亮\r\n  useEffect(() => {\r\n    setSelectedKeys([pathname]);\r\n  }, [pathname]);\r\n  // 点击menu菜单事件\r\n  const menuClick: MenuProps[\"onClick\"] = (e) => {\r\n    startTransition(() => {\r\n      navigate(e.key);\r\n      setSelectedKeys([pathname]);\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"aside_page\">\r\n      <Logo></Logo>\r\n      <Menu\r\n        selectedKeys={selectedKeys}\r\n        mode=\"inline\"\r\n        theme=\"dark\"\r\n        items={items}\r\n        onClick={menuClick}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport avatar from \"@/assets/images/header/avatar.jpg\";\r\nimport { Avatar, Popover } from \"antd\";\r\nexport default function AvatarIcon() {\r\n  const [avatarSize, setAvatarSize] = useState<\"large\" | 64>(\"large\");\r\n  //Popover显示隐藏的回调\r\n  const onOpenChange = function (open: boolean) {\r\n    if (open) {\r\n      setAvatarSize(64);\r\n    } else {\r\n      setAvatarSize(\"large\");\r\n    }\r\n  };\r\n  const userContent = (\r\n    <div className=\"user_info\">\r\n      <div  className=\"user_info_item\">个人信息</div>\r\n      <div  className=\"user_info_item\">消息通知</div>\r\n      <div  className=\"user_info_item\">退出</div>\r\n    </div>\r\n  );\r\n  return (\r\n    <div className=\"avatar_use_page\">\r\n      <Popover\r\n        placement=\"bottom\"\r\n        content={userContent}\r\n        trigger=\"hover\"\r\n        onOpenChange={onOpenChange}\r\n        overlayClassName=\"user_info_popover\"\r\n      >\r\n        <Avatar size={avatarSize} src={avatar} />\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FullscreenOutlined, FullscreenExitOutlined } from \"@ant-design/icons\";\r\n\r\nexport default function ScreenIcon() {\r\n  const [isFullscreen, setIsFullscreen] = useState(false);\r\n  // 实现全屏\r\n  const fullScreenFun = function () {\r\n    const elem = document.documentElement;\r\n    if (!document.fullscreenElement) {\r\n      if (elem.requestFullscreen) {\r\n        elem.requestFullscreen();\r\n      } else if ((elem as any).mozRequestFullScreen) {\r\n        // Firefox\r\n        (elem as any).mozRequestFullScreen();\r\n      } else if ((elem as any).webkitRequestFullscreen) {\r\n        // Chrome, Safari and Opera\r\n        (elem as any).webkitRequestFullscreen();\r\n      } else if ((elem as any).msRequestFullscreen) {\r\n        // IE/Edge\r\n        (elem as any).msRequestFullscreen();\r\n      }\r\n    } else {\r\n      if (document.exitFullscreen) {\r\n        document.exitFullscreen();\r\n      } else if ((document as any).mozCancelFullScreen) {\r\n        // Firefox\r\n        (document as any).mozCancelFullScreen();\r\n      } else if ((document as any).webkitExitFullscreen) {\r\n        // Chrome, Safari and Opera\r\n        (document as any).webkitExitFullscreen();\r\n      } else if ((document as any).msExitFullscreen) {\r\n        // IE/Edge\r\n        (document as any).msExitFullscreen();\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleFullscreenChange = () => {\r\n      setIsFullscreen(!!document.fullscreenElement);\r\n    };\r\n\r\n    document.addEventListener(\"fullscreenchange\", handleFullscreenChange);\r\n    document.addEventListener(\"webkitfullscreenchange\", handleFullscreenChange);\r\n    document.addEventListener(\"mozfullscreenchange\", handleFullscreenChange);\r\n    document.addEventListener(\"MSFullscreenChange\", handleFullscreenChange);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"fullscreenchange\", handleFullscreenChange);\r\n      document.removeEventListener(\r\n        \"webkitfullscreenchange\",\r\n        handleFullscreenChange\r\n      );\r\n      document.removeEventListener(\r\n        \"mozfullscreenchange\",\r\n        handleFullscreenChange\r\n      );\r\n      document.removeEventListener(\r\n        \"MSFullscreenChange\",\r\n        handleFullscreenChange\r\n      );\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"screen_use_page\" onClick={fullScreenFun}>\r\n      {isFullscreen ? <FullscreenExitOutlined /> : <FullscreenOutlined />}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  changeHeaderBgColor,\r\n  changeAsideBgColor,\r\n  changeAsideItemBgColor,\r\n  resetHeaderBgColor,\r\n  resetAsideBgColor,\r\n} from \"@/store/global\";\r\nimport { SkinOutlined } from \"@ant-design/icons\";\r\nimport { Drawer, Divider, ColorPicker, Radio } from \"antd\";\r\nexport default function SkinIcon() {\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n  const [value, setValue] = React.useState<string>(\"inline\");\r\n  // 获取store值\r\n  const dispatch = useDispatch();\r\n  // 实现全屏\r\n  const showDrawerFun = () => {\r\n    setOpenDrawer(true);\r\n  };\r\n  // 主题推荐色\r\n  const themeColor = [\r\n    {\r\n      name: \"默认\",\r\n      color: \"#1890ff\",\r\n    },\r\n    {\r\n      name: \"健康\",\r\n      color: \"#1abc9c\",\r\n    },\r\n    // {\r\n    //   name: \"优雅\",\r\n    //   color: \"#722ed1\",\r\n    // },\r\n    {\r\n      name: \"热情\",\r\n      color: \"#f44336\",\r\n    },\r\n    {\r\n      name: \"宁静\",\r\n      color: \"#00bcd4\",\r\n    },\r\n  ];\r\n  return (\r\n    <div className=\"skin_use_page\">\r\n      <SkinOutlined onClick={showDrawerFun} />\r\n      <Drawer\r\n        title=\"主题配置\"\r\n        onClose={() => setOpenDrawer(false)}\r\n        open={openDrawer}\r\n        className=\"drawer_auto\"\r\n      >\r\n        <div className=\"theme_disposition\">\r\n          <h2>框架配置</h2>\r\n          <Radio.Group value={value} onChange={(e) => setValue(e.target.value)}>\r\n            <Radio value=\"inline\">inline</Radio>\r\n            <Radio value=\"horizontal\">\r\n              horizontal <span style={{ color: \"red\" }}>(暂不支持)</span>{\" \"}\r\n            </Radio>\r\n          </Radio.Group>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"theme_disposition\">\r\n          <h2>头部主题</h2>\r\n          <div className=\"theme_color\">\r\n            {themeColor.map((item, index) => (\r\n              <div\r\n                key={index}\r\n                className=\"every_bgc\"\r\n                style={{ backgroundColor: item.color }}\r\n                onClick={() => dispatch(changeHeaderBgColor(item.color))}\r\n              >\r\n                {item.name}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"custom_theme\">\r\n            <span>自定义主题</span>\r\n            <ColorPicker\r\n              defaultValue=\"#fff\"\r\n              onChange={(Color, hex) => dispatch(changeHeaderBgColor(hex))}\r\n            />\r\n          </div>\r\n          <div\r\n            className=\"reset_theme\"\r\n            onClick={() => dispatch(resetHeaderBgColor())}\r\n          >\r\n            重置主题\r\n          </div>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"theme_disposition\">\r\n          <h2>侧边主题</h2>\r\n          <div className=\"aside_theme\">\r\n            <div className=\"custom_theme\">\r\n              <span>背景颜色</span>\r\n              <ColorPicker\r\n                defaultValue=\"#001529\"\r\n                onChange={(Color, hex) => dispatch(changeAsideBgColor(hex))}\r\n              />\r\n            </div>\r\n            <div className=\"custom_theme\">\r\n              <span>菜单项背景颜色</span>\r\n              <ColorPicker\r\n                defaultValue=\"#1677ff\"\r\n                onChange={(Color, hex) => dispatch(changeAsideItemBgColor(hex))}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"reset_theme\"\r\n            onClick={() => dispatch(resetAsideBgColor())}\r\n          >\r\n            重置主题\r\n          </div>\r\n        </div>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","// import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { changeCollapsed } from \"@/store/header\";\r\nimport \"./index.less\";\r\nimport { Button, Col, Row } from \"antd\";\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from \"@ant-design/icons\";\r\nimport AvatarIcon from \"./components/Avatar\";\r\nimport ScreenIcon from \"./components/FullScreen\";\r\nimport SkinIcon from \"./components/Skin\";\r\nexport default function HeaderIndex() {\r\n  const dispatch = useDispatch();\r\n  const headerStore = useSelector((state: any) => {\r\n    return state.headerReducer;\r\n  });\r\n  return (\r\n    <div className=\"header_page\">\r\n      <Row>\r\n        <Col span={4}>\r\n          <Button\r\n            type=\"text\"\r\n            icon={\r\n              headerStore.isCollapsed ? (\r\n                <MenuUnfoldOutlined />\r\n              ) : (\r\n                <MenuFoldOutlined />\r\n              )\r\n            }\r\n            onClick={() => dispatch(changeCollapsed())}\r\n            style={{\r\n              fontSize: \"16px\",\r\n              width: 64,\r\n              height: 64,\r\n            }}\r\n          />\r\n        </Col>\r\n        <Col span={4} offset={16}>\r\n          <div className=\"fun_icons\">\r\n            <SkinIcon></SkinIcon>\r\n            <ScreenIcon></ScreenIcon>\r\n            <AvatarIcon></AvatarIcon>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n","export default function FooterIndex() {\r\n  return <div>YGYong ©{new Date().getFullYear()} Created</div>;\r\n}\r\n","// import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AsideIndex from \"./aside\";\r\nimport HeaderIndex from \"./header\";\r\nimport FooterIndex from \"./footer\";\r\nimport { Layout, Row, Col } from \"antd\";\r\nimport { Outlet } from \"react-router-dom\";\r\nconst { Header, Sider, Footer, Content } = Layout;\r\nexport default function LayoutIndex() {\r\n  // 获取header store里的值\r\n  const headerStore = useSelector((state: any) => {\r\n    return state.headerReducer;\r\n  });\r\n  return (\r\n    <Layout style={{ height: \"100%\" }}>\r\n      {/* 侧边栏 */}\r\n      <Sider collapsible trigger={null} collapsed={headerStore.isCollapsed}>\r\n        <AsideIndex></AsideIndex>\r\n      </Sider>\r\n      <Layout>\r\n        {/* 头部内容 */}\r\n        <Header style={{ padding: 0 }}>\r\n          <HeaderIndex></HeaderIndex>\r\n        </Header>\r\n        {/* 主体内容 */}\r\n        <Content\r\n          style={{\r\n            margin: \"24px 16px\",\r\n            padding: 24,\r\n            minHeight: 280,\r\n            background: \"#fff\",\r\n            borderRadius: 10,\r\n          }}\r\n        >\r\n          <Outlet></Outlet>\r\n        </Content>\r\n        {/* 底部内容 */}\r\n        <Footer style={{ textAlign: \"center\" }}>\r\n          <FooterIndex></FooterIndex>\r\n        </Footer>\r\n      </Layout>\r\n    </Layout>\r\n\r\n    // <Layout>\r\n    //   {/* 头部内容 */}\r\n    //   <Header style={{ width: \"100%\", padding: 0 }}>\r\n    //     <Row>\r\n    //       <Col span={20}>\r\n    //         <AsideIndex></AsideIndex>\r\n    //       </Col>\r\n    //       <Col span={4}>\r\n    //         <HeaderIndex></HeaderIndex>\r\n    //       </Col>\r\n    //     </Row>\r\n    //   </Header>\r\n    //   {/* 主体内容 */}\r\n    //   <Content\r\n    //     style={{\r\n    //       margin: \"24px 16px\",\r\n    //       padding: 24,\r\n    //       minHeight: 280,\r\n    //       background: \"#fff\",\r\n    //       borderRadius: 10,\r\n    //     }}\r\n    //   >\r\n    //     <Outlet></Outlet>\r\n    //   </Content>\r\n    //   {/* 底部内容 */}\r\n    //   <Footer style={{ textAlign: \"center\" }}>\r\n    //     <FooterIndex></FooterIndex>\r\n    //   </Footer>\r\n    // </Layout>\r\n  );\r\n}\r\n"],"names":["Logo","headerStore","useSelector","state","headerReducer","_jsxs","className","children","_jsx","src","logo","alt","isCollapsed","items","key","icon","HomeOutlined","label","DesktopOutlined","ProfileOutlined","PhoneOutlined","GlobalOutlined","HeaderIndex","selectedKeys","setSelectedKeys","useState","navigate","useNavigate","pathname","useLocation","useEffect","Menu","mode","theme","onClick","e","startTransition","AvatarIcon","avatarSize","setAvatarSize","userContent","Popover","placement","content","trigger","onOpenChange","open","overlayClassName","Avatar","size","avatar","ScreenIcon","isFullscreen","setIsFullscreen","handleFullscreenChange","document","fullscreenElement","addEventListener","removeEventListener","elem","documentElement","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","FullscreenExitOutlined","FullscreenOutlined","SkinIcon","openDrawer","setOpenDrawer","value","setValue","React","dispatch","useDispatch","SkinOutlined","showDrawerFun","Drawer","title","onClose","Radio","onChange","target","style","color","Divider","name","map","item","index","backgroundColor","changeHeaderBgColor","ColorPicker","defaultValue","Color","hex","resetHeaderBgColor","changeAsideBgColor","changeAsideItemBgColor","resetAsideBgColor","Row","Col","span","Button","type","MenuUnfoldOutlined","MenuFoldOutlined","changeCollapsed","fontSize","width","height","offset","FooterIndex","Date","getFullYear","Header","Sider","Footer","Content","Layout","LayoutIndex","collapsible","collapsed","AsideIndex","padding","margin","minHeight","background","borderRadius","Outlet","textAlign"],"sourceRoot":""}